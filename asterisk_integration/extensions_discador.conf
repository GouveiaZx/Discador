;
; EXTENSÕES PARA SISTEMA DISCADOR PREDITIVO
; Arquivo: extensions_discador.conf
; Incluir no dialplan principal: #include "extensions_discador.conf"
;

[discador-outbound]
; Contexto para chamadas de saída do discador
exten => _X.,1,NoOp(=== DISCADOR PREDITIVO - Chamada para ${EXTEN} ===)
 same => n,Set(CHAMADA_ID=${UNIQUEID})
 same => n,Set(CLI_NUMBER=${CALLERID(num)})
 same => n,Set(NUMERO_DESTINO=${EXTEN})
 same => n,UserEvent(DiscadorInicio,Chamada_ID:${CHAMADA_ID},CLI:${CLI_NUMBER},Destino:${NUMERO_DESTINO})
 same => n,Dial(SIP/${TRUNK}/${EXTEN},30,tT)
 same => n,Set(DIAL_STATUS=${DIALSTATUS})
 same => n,UserEvent(DiscadorFim,Chamada_ID:${CHAMADA_ID},Status:${DIAL_STATUS},Duracao:${CDR(billsec)})
 same => n,Hangup()

[discador-presione1]
; Contexto para sistema "Presione 1"
exten => s,1,NoOp(=== PRESIONE 1 - Iniciando ===)
 same => n,Set(CHAMADA_ID=${UNIQUEID})
 same => n,Set(TIMEOUT(digit)=10)
 same => n,Set(TIMEOUT(response)=15)
 same => n,UserEvent(AudioInicio,Chamada_ID:${CHAMADA_ID},Contexto:Presione1)
 same => n,Background(${AUDIO_PRINCIPAL})
 same => n,WaitExten(15)
 same => n,Goto(s-timeout,1)

exten => 1,1,NoOp(=== PRESIONE 1 - Tecla 1 pressionada ===)
 same => n,UserEvent(DTMF,Chamada_ID:${CHAMADA_ID},Digit:1)
 same => n,Playback(obrigado-aguarde)
 same => n,Set(TRANSFER_NUMBER=${NUMERO_TRANSFERENCIA})
 same => n,Dial(SIP/${TRUNK_TRANSFER}/${TRANSFER_NUMBER},30,tT)
 same => n,UserEvent(TransferenciaFim,Chamada_ID:${CHAMADA_ID},Status:${DIALSTATUS})
 same => n,Hangup()

exten => 2,1,NoOp(=== PRESIONE 1 - Tecla 2 pressionada ===)
 same => n,UserEvent(DTMF,Chamada_ID:${CHAMADA_ID},Digit:2)
 same => n,Background(${AUDIO_PRESIONE2})
 same => n,WaitExten(10)
 same => n,Hangup()

exten => 9,1,NoOp(=== PRESIONE 1 - Tecla 9 para sair ===)
 same => n,UserEvent(DTMF,Chamada_ID:${CHAMADA_ID},Digit:9)
 same => n,Playback(obrigado-tchau)
 same => n,Hangup()

exten => s-timeout,1,NoOp(=== PRESIONE 1 - Timeout ===)
 same => n,UserEvent(Timeout,Chamada_ID:${CHAMADA_ID},Motivo:SemResposta)
 same => n,Playback(timeout-obrigado)
 same => n,Hangup()

exten => i,1,NoOp(=== PRESIONE 1 - Tecla inválida ===)
 same => n,UserEvent(DTMF,Chamada_ID:${CHAMADA_ID},Digit:invalido)
 same => n,Playback(opcao-invalida)
 same => n,Goto(s,3)

[discador-voicemail-detection]
; Contexto para detecção de voicemail
exten => s,1,NoOp(=== DETECÇÃO VOICEMAIL ===)
 same => n,Set(CHAMADA_ID=${UNIQUEID})
 same => n,AMD(2000,1500,300,5000,120,50,4,256)
 same => n,UserEvent(VoicemailDetection,Chamada_ID:${CHAMADA_ID},Resultado:${AMDSTATUS},Causa:${AMDCAUSE})
 same => n,GotoIf($["${AMDSTATUS}" = "MACHINE"]?voicemail:humano)

exten => s,n(humano),NoOp(=== HUMANO DETECTADO ===)
 same => n,Goto(discador-presione1,s,1)

exten => s,n(voicemail),NoOp(=== VOICEMAIL DETECTADO ===)
 same => n,UserEvent(VoicemailDetectado,Chamada_ID:${CHAMADA_ID})
 same => n,Playback(${AUDIO_VOICEMAIL})
 same => n,Hangup()

[discador-monitoring]
; Contexto para monitoramento de chamadas
exten => _X.,1,NoOp(=== MONITORAMENTO - Chamada ${EXTEN} ===)
 same => n,Set(CHAMADA_ID=${UNIQUEID})
 same => n,Set(MONITOR_FILE=/var/spool/asterisk/monitor/discador-${CHAMADA_ID})
 same => n,Monitor(wav,${MONITOR_FILE},m)
 same => n,UserEvent(MonitorInicio,Chamada_ID:${CHAMADA_ID},Arquivo:${MONITOR_FILE})
 same => n,Dial(${ARG1},${ARG2},${ARG3})
 same => n,StopMonitor()
 same => n,UserEvent(MonitorFim,Chamada_ID:${CHAMADA_ID})
 same => n,Hangup()

[discador-cli-rotation]
; Contexto para rotação de CLIs
exten => _X.,1,NoOp(=== ROTAÇÃO CLI - Chamada para ${EXTEN} ===)
 same => n,Set(CHAMADA_ID=${UNIQUEID})
 same => n,AGI(cli_rotation.py,${EXTEN})
 same => n,Set(SELECTED_CLI=${CLI_SELECTED})
 same => n,Set(SELECTED_TRUNK=${TRUNK_SELECTED})
 same => n,Set(CALLERID(num)=${SELECTED_CLI})
 same => n,UserEvent(CLIRotation,Chamada_ID:${CHAMADA_ID},CLI:${SELECTED_CLI},Trunk:${SELECTED_TRUNK})
 same => n,Dial(SIP/${SELECTED_TRUNK}/${EXTEN},30,tT)
 same => n,Hangup()

;
; MACROS AUXILIARES
;

[macro-discador-log]
; Macro para logging centralizado
exten => s,1,NoOp(=== LOG DISCADOR ===)
 same => n,Set(LOG_TIME=${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)})
 same => n,UserEvent(DiscadorLog,Timestamp:${LOG_TIME},Chamada_ID:${ARG1},Evento:${ARG2},Dados:${ARG3})
 same => n,MacroExit()

[macro-discador-stats]
; Macro para estatísticas em tempo real
exten => s,1,NoOp(=== STATS DISCADOR ===)
 same => n,Set(STATS_TIME=${EPOCH})
 same => n,UserEvent(DiscadorStats,Timestamp:${STATS_TIME},Tipo:${ARG1},Valor:${ARG2},Campanha:${ARG3})
 same => n,MacroExit()

;
; CONFIGURAÇÕES GLOBAIS
;

[globals]
; Variáveis globais do discador
AUDIO_PRINCIPAL=/var/lib/asterisk/sounds/discador/principal
AUDIO_PRESIONE2=/var/lib/asterisk/sounds/discador/presione2
AUDIO_VOICEMAIL=/var/lib/asterisk/sounds/discador/voicemail
NUMERO_TRANSFERENCIA=4000
TRUNK_TRANSFER=trunk_principal
DISCADOR_API_URL=https://discador.onrender.com/api/v1
DISCADOR_WEBHOOK_URL=${DISCADOR_API_URL}/webhook/asterisk 