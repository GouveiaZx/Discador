;=============================================================================
; CONFIGURAÇÃO ASTERISK PARA SISTEMA MULTI-SIP
; Arquivo: extensions_multi_sip.conf
; Descrição: Dialplan para integração com sistema de seleção inteligente
;=============================================================================

[multi-sip-outbound]
; Contexto principal para chamadas com seleção Multi-SIP
; Use este contexto para todas as chamadas que devem usar seleção inteligente

; Padrão para números nacionais (Brasil)
exten => _55XXXXXXXXX,1,Verbose(2,=== MULTI-SIP: Iniciando seleção para ${EXTEN} ===)
exten => _55XXXXXXXXX,n,Set(NUMERO_ORIGINAL=${EXTEN})
exten => _55XXXXXXXXX,n,Set(CAMPANHA_ID=${CHANNEL(CAMPANHA_ID):=0})
exten => _55XXXXXXXXX,n,Set(METODO_SELECAO=${CHANNEL(METODO_SELECAO):=inteligente})
exten => _55XXXXXXXXX,n,Gosub(multi-sip-select,${EXTEN},1)
exten => _55XXXXXXXXX,n,GotoIf($["${MULTISIP_SUCCESS}" = "1"]?dial:error)

; Realizar chamada com provedor selecionado
exten => _55XXXXXXXXX,n(dial),Verbose(2,MULTI-SIP: Discando via ${MULTISIP_PROVEDOR_NOME})
exten => _55XXXXXXXXX,n,Set(DIAL_OPTIONS=tTr)
exten => _55XXXXXXXXX,n,Set(__MULTISIP_START_TIME=${EPOCH})
exten => _55XXXXXXXXX,n,Dial(${MULTISIP_DIAL_STRING},${TIMEOUT_DIAL:=30},${DIAL_OPTIONS})
exten => _55XXXXXXXXX,n,Set(MULTISIP_DIAL_STATUS=${DIALSTATUS})
exten => _55XXXXXXXXX,n,Gosub(multi-sip-result,${EXTEN},1)
exten => _55XXXXXXXXX,n,Goto(hangup)

; Tratamento de erro na seleção
exten => _55XXXXXXXXX,n(error),Verbose(1,MULTI-SIP: ERRO na seleção - ${MULTISIP_ERROR})
exten => _55XXXXXXXXX,n,Set(CDR(userfield)=MULTISIP_ERROR:${MULTISIP_ERROR})
exten => _55XXXXXXXXX,n,Playtone(congestion)
exten => _55XXXXXXXXX,n,Wait(3)
exten => _55XXXXXXXXX,n,Goto(hangup)

; Finalização
exten => _55XXXXXXXXX,n(hangup),Verbose(2,MULTI-SIP: Finalizando chamada)
exten => _55XXXXXXXXX,n,Hangup()

; Padrão para números internacionais
exten => _+X.,1,Verbose(2,=== MULTI-SIP: Chamada internacional ${EXTEN} ===)
exten => _+X.,n,Set(NUMERO_ORIGINAL=${EXTEN})
exten => _+X.,n,Set(CAMPANHA_ID=${CHANNEL(CAMPANHA_ID):=0})
exten => _+X.,n,Set(METODO_SELECAO=menor_custo) ; Internacional prioriza custo
exten => _+X.,n,Gosub(multi-sip-select,${EXTEN},1)
exten => _+X.,n,GotoIf($["${MULTISIP_SUCCESS}" = "1"]?dial:error)
exten => _+X.,n(dial),Dial(${MULTISIP_DIAL_STRING},45,tTr) ; Timeout maior para internacional
exten => _+X.,n,Set(MULTISIP_DIAL_STATUS=${DIALSTATUS})
exten => _+X.,n,Gosub(multi-sip-result,${EXTEN},1)
exten => _+X.,n,Goto(hangup)
exten => _+X.,n(error),Verbose(1,MULTI-SIP: ERRO internacional - ${MULTISIP_ERROR})
exten => _+X.,n,Playtone(congestion)
exten => _+X.,n,Wait(3)
exten => _+X.,n(hangup),Hangup()

; Padrão genérico para outros números
exten => _X.,1,Verbose(2,=== MULTI-SIP: Número genérico ${EXTEN} ===)
exten => _X.,n,Set(NUMERO_ORIGINAL=${EXTEN})
exten => _X.,n,Set(CAMPANHA_ID=${CHANNEL(CAMPANHA_ID):=0})
exten => _X.,n,Set(METODO_SELECAO=${CHANNEL(METODO_SELECAO):=inteligente})
exten => _X.,n,Gosub(multi-sip-select,${EXTEN},1)
exten => _X.,n,GotoIf($["${MULTISIP_SUCCESS}" = "1"]?dial:error)
exten => _X.,n(dial),Dial(${MULTISIP_DIAL_STRING},30,tTr)
exten => _X.,n,Set(MULTISIP_DIAL_STATUS=${DIALSTATUS})
exten => _X.,n,Gosub(multi-sip-result,${EXTEN},1)
exten => _X.,n,Goto(hangup)
exten => _X.,n(error),Verbose(1,MULTI-SIP: ERRO genérico - ${MULTISIP_ERROR})
exten => _X.,n,Playtone(congestion)
exten => _X.,n,Wait(3)
exten => _X.,n(hangup),Hangup()

;=============================================================================
; SUBROTINA: SELEÇÃO DE PROVEDOR
;=============================================================================
[multi-sip-select]
; Subrotina para seleção inteligente de provedor
; ARG1: Número de destino

exten => _X.,1,Verbose(2,MULTI-SIP: Executando seleção para ${ARG1})
exten => _X.,n,Set(MULTISIP_SUCCESS=0)
exten => _X.,n,Set(MULTISIP_ERROR=)

; Executar AGI de seleção
exten => _X.,n,AGI(multi_sip_agi.py)

; Verificar se seleção foi bem-sucedida
exten => _X.,n,GotoIf($["${MULTISIP_SUCCESS}" = "1"]?success:failed)

; Seleção bem-sucedida
exten => _X.,n(success),Verbose(2,MULTI-SIP: Provedor selecionado - ${MULTISIP_PROVEDOR_NOME})
exten => _X.,n,Verbose(2,MULTI-SIP: String de discagem - ${MULTISIP_DIAL_STRING})
exten => _X.,n,Verbose(2,MULTI-SIP: Custo estimado - ${MULTISIP_CUSTO_ESTIMADO})
exten => _X.,n,Set(CDR(userfield)=MULTISIP:${MULTISIP_PROVEDOR_ID}:${MULTISIP_UUID_SELECAO})
exten => _X.,n,Return()

; Seleção falhou
exten => _X.,n(failed),Verbose(1,MULTI-SIP: Falha na seleção - ${MULTISIP_ERROR})
exten => _X.,n,Set(MULTISIP_SUCCESS=0)
exten => _X.,n,Return()

;=============================================================================
; SUBROTINA: REGISTRO DE RESULTADO
;=============================================================================
[multi-sip-result]
; Subrotina para registrar resultado da chamada
; ARG1: Número de destino

exten => _X.,1,Verbose(2,MULTI-SIP: Registrando resultado para ${ARG1})

; Calcular duração da chamada
exten => _X.,n,Set(MULTISIP_END_TIME=${EPOCH})
exten => _X.,n,Set(MULTISIP_DURATION=$[${MULTISIP_END_TIME} - ${MULTISIP_START_TIME:=0}])

; Determinar se chamada foi estabelecida
exten => _X.,n,Set(MULTISIP_ESTABLISHED=0)
exten => _X.,n,GotoIf($["${MULTISIP_DIAL_STATUS}" = "ANSWER"]?answered:not_answered)

; Chamada atendida
exten => _X.,n(answered),Set(MULTISIP_ESTABLISHED=1)
exten => _X.,n,Verbose(2,MULTI-SIP: Chamada atendida - Duração: ${MULTISIP_DURATION}s)
exten => _X.,n,Goto(register)

; Chamada não atendida
exten => _X.,n(not_answered),Set(MULTISIP_ESTABLISHED=0)
exten => _X.,n,Verbose(2,MULTI-SIP: Chamada não atendida - Status: ${MULTISIP_DIAL_STATUS})

; Registrar resultado via AGI (opcional - pode ser feito via webhook)
exten => _X.,n(register),NoOp(MULTI-SIP: Resultado registrado no CDR)
exten => _X.,n,Return()

;=============================================================================
; CONTEXTO PARA CAMPANHAS ESPECÍFICAS
;=============================================================================
[multi-sip-campanha]
; Contexto para campanhas que precisam de configurações específicas

; Campanha de alta qualidade (prioriza qualidade)
exten => _X.,1,Set(METODO_SELECAO=melhor_qualidade)
exten => _X.,n,Set(CAMPANHA_ID=${CHANNEL(CAMPANHA_ID)})
exten => _X.,n,Goto(multi-sip-outbound,${EXTEN},1)

;=============================================================================
; CONTEXTO PARA TESTES
;=============================================================================
[multi-sip-test]
; Contexto para testes do sistema Multi-SIP

; Teste de conectividade
exten => 9999,1,Verbose(2,MULTI-SIP: Teste de conectividade)
exten => 9999,n,Set(METODO_SELECAO=inteligente)
exten => 9999,n,AGI(multi_sip_agi.py)
exten => 9999,n,GotoIf($["${MULTISIP_SUCCESS}" = "1"]?success:failed)
exten => 9999,n(success),Playback(beep)
exten => 9999,n,SayAlpha(${MULTISIP_PROVEDOR_NOME})
exten => 9999,n,Hangup()
exten => 9999,n(failed),Playback(beeperr)
exten => 9999,n,SayAlpha(${MULTISIP_ERROR})
exten => 9999,n,Hangup()

; Teste de seleção por custo
exten => 9998,1,Verbose(2,MULTI-SIP: Teste seleção por custo)
exten => 9998,n,Set(METODO_SELECAO=menor_custo)
exten => 9998,n,Set(EXTEN=5511999887766) ; Número de teste
exten => 9998,n,AGI(multi_sip_agi.py)
exten => 9998,n,Verbose(2,Provedor selecionado: ${MULTISIP_PROVEDOR_NOME})
exten => 9998,n,Verbose(2,Custo estimado: ${MULTISIP_CUSTO_ESTIMADO})
exten => 9998,n,Hangup()

; Teste de seleção por qualidade
exten => 9997,1,Verbose(2,MULTI-SIP: Teste seleção por qualidade)
exten => 9997,n,Set(METODO_SELECAO=melhor_qualidade)
exten => 9997,n,Set(EXTEN=5511999887766) ; Número de teste
exten => 9997,n,AGI(multi_sip_agi.py)
exten => 9997,n,Verbose(2,Provedor selecionado: ${MULTISIP_PROVEDOR_NOME})
exten => 9997,n,Verbose(2,Score final: ${MULTISIP_SCORE_FINAL})
exten => 9997,n,Hangup()

;=============================================================================
; CONTEXTO PARA FAILOVER MANUAL
;=============================================================================
[multi-sip-failover]
; Contexto para failover manual quando sistema automático falha

; Usar provedor específico por ID
exten => _*1X.,1,Verbose(2,MULTI-SIP: Failover manual para provedor ${EXTEN:2})
exten => _*1X.,n,Set(PROVEDOR_ID=${EXTEN:2})
exten => _*1X.,n,Set(NUMERO_DESTINO=${CHANNEL(NUMERO_DESTINO)})
exten => _*1X.,n,NoOp(Implementar lógica de failover manual aqui)
exten => _*1X.,n,Hangup()

;=============================================================================
; MACROS ÚTEIS
;=============================================================================

; Macro para definir configurações por tipo de campanha
[macro-multisip-config]
exten => s,1,NoOp(Configurando Multi-SIP para campanha ${ARG1})
exten => s,n,GotoIf($["${ARG1}" = "vendas"]?vendas:default)
exten => s,n(vendas),Set(METODO_SELECAO=melhor_qualidade)
exten => s,n,Set(TIMEOUT_DIAL=45)
exten => s,n,Goto(end)
exten => s,n(default),Set(METODO_SELECAO=inteligente)
exten => s,n,Set(TIMEOUT_DIAL=30)
exten => s,n(end),MacroExit()

;=============================================================================
; CONFIGURAÇÕES GLOBAIS RECOMENDADAS
;=============================================================================

; No arquivo globals.conf, adicionar:
; MULTISIP_API_URL=http://localhost:8000
; MULTISIP_TIMEOUT=10
; MULTISIP_RETRY_COUNT=3

;=============================================================================
; INSTRUÇÕES DE USO
;=============================================================================

; 1. Para usar em suas campanhas, configure o contexto de saída:
;    Set(CHANNEL(context)=multi-sip-outbound)
;
; 2. Para definir campanha específica:
;    Set(CHANNEL(CAMPANHA_ID)=123)
;
; 3. Para forçar método de seleção:
;    Set(CHANNEL(METODO_SELECAO)=menor_custo)
;
; 4. Para testar o sistema:
;    Dial(Local/9999@multi-sip-test)

;=============================================================================
; FIM DA CONFIGURAÇÃO MULTI-SIP
;============================================================================= 